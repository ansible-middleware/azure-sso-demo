---
- name: Create resource group
  azure_rm_resourcegroup:
    name: "{{ item.name }}"
    location: "{{ item.location }}"
  loop: "{{ resource_groups }}"

- name: Create virtual network
  azure_rm_virtualnetwork:
    resource_group: "{{ item.name }}"
    name: "{{ virtualnetwork_name }}"
    address_prefixes: "{{ item.address_prefixes }}"
  loop: "{{ resource_groups }}"

- name: Add subnet
  azure_rm_subnet:
    resource_group: "{{ item.name }}"
    name: "{{ subnet_name }}"
    virtual_network: "{{ virtualnetwork_name }}"
    address_prefix: "{{ item.address_prefixes }}"
  loop: "{{ resource_groups }}"

- name: Create security groups for RG1
  azure_rm_securitygroup:
    resource_group: "{{ resource_groups.0.name }}"
    name: "{{ sg.key }}"
    rules: "{{ sg.value.rules }}"
  loop: "{{ security.groups | dict2items }}"
  loop_control:
    loop_var: sg

- name: Create security groups for RG2
  azure_rm_securitygroup:
    resource_group: "{{ resource_groups.1.name }}"
    name: "{{ sg.key }}"
    rules: "{{ sg.value.rules }}"
  loop: "{{ security.groups | dict2items }}"
  loop_control:
    loop_var: sg

- name: Create a private DNS zone
  azure.azcollection.azure_rm_privatednszone:
    resource_group: "{{ item.name }}"
    name: "{{ privatednszone }}"
  loop: "{{ resource_groups }}"
  

- name: Update virtual network link
  azure.azcollection.azure_rm_privatednszonelink:
    resource_group: "{{ item.name }}"
    name: vn_ansible_middileware_link
    zone_name: "{{ privatednszone }}"
    virtual_network: "{{ virtualnetwork_name }}"
    registration_enabled: yes
    state: present
  loop: "{{ resource_groups }}"

- name: Create public IP address for VM's
  azure_rm_publicipaddress:
    resource_group: "{{ item.resourcegroup_name }}"
    allocation_method: Static
    name: "{{ item.name }}-ip"
    domain_name: "{{ item.domain_name | default(omit)}}"
  loop: "{{ vm }}"

- name: Create a network interface
  azure_rm_networkinterface:
    name: "{{ item.name }}"
    resource_group: "{{ item.resourcegroup_name }}"
    virtual_network: "{{ virtualnetwork_name }}"
    subnet_name: "{{subnet_name}}"
    security_group: "{{ item.role }}"
    public_ip_name: "{{ item.name }}-ip"
  loop: "{{ vm }}"

- name: Create Virtual Machine
  azure_rm_virtualmachine:
    resource_group: "{{ item.resourcegroup_name }}"
    name: "{{ item.name }}"
    admin_username: "{{ admin_username }}"
    admin_password: "{{ admin_password }}"
    network_interface_names: "{{ item.name }}"
    ssh_public_keys:
    - path: "/home/{{ admin_username }}/.ssh/authorized_keys"
      key_data: "{{ ssh_key_path }}"
    vm_size: "{{ vm_size }}"
    tags:
      site: "{{ item.site | default(None) }}"
      role: "{{ item.role | default(None)}}"
    image:
      offer: "{{ offer }}"
      publisher: "{{ publisher }}"
      sku: "{{ sku }}"
      version: "{{ image_version }}"
  loop: "{{ vm }}"

- name: Config for unmanaged mariadb database
  block:
    - name: Create Vm's for unmanaged mariadb database
      azure_rm_virtualmachine:
        resource_group: "{{ item.resourcegroup_name }}"
        name: "{{ item.name }}"
        admin_username: "{{ admin_username }}"
        admin_password: "{{ admin_password }}"
        network_interface_names: "{{ item.name }}"
        ssh_public_keys:
        - path: "/home/{{ admin_username }}/.ssh/authorized_keys"
          key_data: "{{ ssh_key_path }}"
        vm_size: "{{ vm_size }}"
        tags:
          site: "{{ item.site | default(None) }}"
          role: "{{ item.role | default(None)}}"
        image:
          offer: "{{ offer }}"
          publisher: "{{ publisher }}"
          sku: "{{ sku }}"
          version: "{{ image_version }}"
      loop: "{{ db_vm }}"
  when: not managed_mariadb

- name: Install, configure and managed mariadb database
  block:
    - name: Create MariaDB server instances
      azure_rm_mariadbserver:
        resource_group: "{{ item.resourcegroup_name }}"
        name: "{{ item.name }}"
        sku:
          name: "{{ db_sku_name }}"
          tier: "{{ db_sku_tier }}"
        location: "{{ item.resourcegroup_location }}"
        storage_mb: "{{ db_storage_mb }}"
        # enforce_ssl: "{{ db_enforce_ssl }}"
        version: "{{ db_version }}"
        admin_username: "{{ db_admin_username }}"
        admin_password: "{{ db_admin_password }}"
        tags:
          site: "{{ item.site | default(None) }}"
          role: "{{ item.role | default(None)}}"
      loop: "{{ db }}"

    - name: Create MariaDB firewall rule
      azure_rm_mariadbfirewallrule:
        resource_group: "{{ item.resourcegroup_name }}"
        server_name: "{{ item.name }}"
        name: "{{ item.name }}-rule"
        start_ip_address: "{{ item.start_ip_address }}"
        end_ip_address: "{{ item.end_ip_address }}"
      loop: "{{ db }}"

    - name: Create keycloak Database
      azure_rm_mariadbdatabase:
        resource_group: "{{ item.resourcegroup_name }}"
        server_name: "{{ item.name }}"
        name: "{{ item.database }}"
        charset: "utf8"
        force_update: true
      loop: "{{ db }}"
  when: managed_mariadb

- name: Create Initial virtual network peering
  azure_rm_virtualnetworkpeering:
    resource_group: "{{ resource_groups.0.name }}"
    virtual_network: "{{ virtualnetwork_name }}"
    name: "{{ vn_peering_name }}"
    remote_virtual_network:
      resource_group: "{{ resource_groups.1.name }}"
      name: "{{ virtualnetwork_name }}"
    allow_virtual_network_access: "{{ allow_virtual_network_access }}"
    allow_forwarded_traffic: "{{ allow_forwarded_traffic }}"

- name: Connect virtual network peering
  azure_rm_virtualnetworkpeering:
    resource_group: "{{ resource_groups.1.name }}"
    virtual_network: "{{ virtualnetwork_name }}"
    name: "{{ vn_peering_name }}"
    remote_virtual_network:
      resource_group: "{{ resource_groups.0.name }}"
      name: "{{ virtualnetwork_name }}"
    allow_virtual_network_access: "{{ allow_virtual_network_access }}"
    allow_forwarded_traffic: "{{ allow_forwarded_traffic }}"

- name: Create a DNS zone
  azure_rm_dnszone:
    resource_group: "{{ item.name }}"
    name: "{{ dns_name }}"
  loop: "{{ resource_groups }}"

- name: Create a traffic manager profile
  azure.azcollection.azure_rm_trafficmanager:
    name: "{{ traffic_manager_name }}"
    resource_group: "{{ traffic_manager_resource_group }}"
    profile_status: "{{ profile_status }}"
    dns_config:
      relative_name: "{{ traffic_manager_name }}"
      ttl: "{{ ttl }}"
    monitor_config:
      protocol: "{{ protocol }}"
      port: "{{ port }}"
      path: "{{ path }}"
      timeout_in_seconds: "{{ timeout_in_seconds }}"
      interval_in_seconds: "{{ interval_in_seconds }}"
      tolerated_number_of_failures: "{{ tolerated_number_of_failures }}"
    endpoints: "{{ tm.value }}"
  loop: "{{ traffic_manager.groups | dict2items }}"
  loop_control:
    loop_var: tm

- name: Link public DNS to Traffic Manager.
  azure_rm_dnsrecordset:
    resource_group: "{{ item.name }}"
    relative_name: "{{ relative_name }}"
    zone_name: "{{ dns_name }}"
    record_type: "{{ record_type }}"
    records:
      - entry: "{{ entry }}"
  loop: "{{ resource_groups }}"
